rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth.uid == 'Z2J5yejQpJWShUABgEE2kI6SDrE3';
    }

    function isAuthorized(userId) {
      return request.auth != null && (userId == request.auth.uid || isAdmin());
    }

    function isValidText(text) {
      return text is string || text == null;
    }

    function isValidImages(images) {
      return (images is list && images.size() <= 4) || images == null;
    }

    match /tweets/{tweetId} {
      allow read, update: if request.auth != null;
      allow create: if isAuthorized(request.resource.data.createdBy)
                       && isValidText(request.resource.data.text)
                       && isValidImages(request.resource.data.images);
      allow delete: if isAuthorized(resource.data.createdBy);
    }

    match /users/{document=**} {
      allow read, write
    }

    match /trends/{document=**} {
      allow read, write: if request.auth != null;
    }

     match /chatRooms/{document=**} {
          allow read, write: if request.auth != null;
        }
  }
}
